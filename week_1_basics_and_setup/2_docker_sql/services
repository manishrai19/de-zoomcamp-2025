services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume/var/lib/postgresql/data
    healthcheck:
      test: ["CMD","pg_isready","-U","airflow"]
      interval: 5s
      retries: 5
    restart: always


docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
  -v $(pwd)/week_1_basics_and_setup/2_docker_sql/ny_tax_postgres_data:/var/lib/postgresql/data:rw \
  -p 5432:5432 \
  --network=pg-network \
  --name=pg-database \
postgres:13

docker run -it \
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -e PGADMIN_CONFIG_WTF_CSRF_ENABLED="False" \
  -p 8080:80 \
  --network=pg-network \
  --name=pgadmin \
dpage/pgadmin4



#Set the URL befor running the $url command in the docker
URL = "https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2024-01.parquet"



python3 ingest_data.py \
 --user=root \
 --password=root \
 --host=localhost \
 --port=5432 \
 --db=ny_taxi \
 --table_name=yellow_taxi_data \
 --url=https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2024-01.parquet

docker build -t taxi_ingest:v001 .

# to provide the  parameters to docker container

docker run -it \
  --network=pg-network \
  taxi_ingest:v001 \
    --user=root \
    --password=root \
    --host=pg-database \
    --port=5432 \
    --db=ny_taxi \
    --table_name=yellow_taxi_data \
    --url=${url}
